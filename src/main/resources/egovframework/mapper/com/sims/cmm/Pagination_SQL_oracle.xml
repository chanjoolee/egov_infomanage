<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 11 15:49:39 KST 2016-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PaginationMapper">

	

	<sql id="pageFooterEgov">
		) TB ) WHERE rn BETWEEN #{firstIndex} + 1 AND #{firstIndex} + #{recordCountPerPage}
	</sql>

	<sql id="pageHeader" >
		SELECT * FROM ( SELECT rownum rn, TB.* FROM (
	</sql>

	<sql id="pageFilterJqGrid">
		) TB where 1=1
			<include refid="PaginationMapper.jqgridFilter"></include>
		)
	</sql>

	<sql id="pageFooterJqGrid">
		WHERE 
		<![CDATA[
	    	rn >  to_number(#{rows}) * (to_number(#{page}) -1) 
	    	and rn <= to_number(#{rows}) * to_number(#{page})
    	]]>
	</sql>

	<sql id="fieldFilter">
		<choose>
   			<when test="searchJson != null and searchJson != '' and searchJson.fields != null and searchJson.fields.size() > 0  ">   				
   				<foreach collection="searchJson.fields" item="field" index="index"  open=" and " separator=" and " close="">
	                <choose>
	                	<when test="field.isArray == true ">
		                	${field.field} in 
			                <foreach collection="field.value" item="item" index="index"  open="(" separator=" , " close=")">
			                	#{item}
			                </foreach>
			        	</when>
			        	<otherwise>
			        		${field.field} = #{field.value}
			        	</otherwise>
	                </choose>
	                
	            </foreach>
   			</when>
   			<otherwise></otherwise>
   		</choose>
		<choose><when test="sidx != null and sidx != '' "> order by ${sidx} <if test="sord != null and sord != '' "> ${sord} </if> </when><otherwise>order by 1,2</otherwise></choose>
	</sql>
	<sql id="jqgridFilter">
		<choose>
			<when test="filters != null and filters != '' and (filters.rules.size() > 0  or (filters.groups != null and filters.groups.size() > 0) )">
				and (
				<if test="filters.rules.size() > 0" >
					<foreach collection="filters.rules" item="item" index="index"  open="(" separator="" close=")">
						<if test="index > 0 "> ${filters.groupOp} </if>
						<choose>
							<when test="item.data.equalsIgnoreCase('isnull')">${item.field} is null</when>
							<when test="item.op =='eq' ">REGEXP_LIKE(${item.field}, '^' || #{item.data} || '$','i')</when>
							<when test="item.op =='ne' ">${item.field} <![CDATA[ != ]]> #{item.data}</when>
							<when test="item.op =='lt' ">${item.field} <![CDATA[ < ]]> #{item.data}</when>
							<when test="item.op =='le' ">${item.field} <![CDATA[ <= ]]> #{item.data}</when>
							<when test="item.op =='gt' ">${item.field} <![CDATA[ > ]]> #{item.data}</when>
							<when test="item.op =='ge' ">${item.field} <![CDATA[ >= ]]> #{item.data}</when>
							<when test="item.op =='bw' ">REGEXP_LIKE(${item.field}, '^' || #{item.data},'i')</when>
							<when test="item.op =='bn' "> NOT REGEXP_LIKE(${item.field}, '^' || #{item.data},'i')</when>
							<when test="item.op =='in' "></when>
							<when test="item.op =='ni' "></when>
							<when test="item.op =='ew' "> REGEXP_LIKE(${item.field}, #{item.data}|| '$','i')</when>
							<when test="item.op =='en' "> NOT REGEXP_LIKE(${item.field}, #{item.data}|| '$','i')</when>
							<when test="item.op =='cn' ">REGEXP_LIKE(${item.field}, REGEXP_REPLACE(#{item.data},' ','|'),'i')</when>
							<when test="item.op =='nc' ">NOT REGEXP_LIKE(${item.field}, REGEXP_REPLACE(#{item.data},' ','|'),'i')</when>
							</choose>
					</foreach>	
				</if>	
				<if test="filters.groups != null and filters.groups.size() > 0">
					<foreach collection="filters.groups" item="group" index="group_index"  open=""  close="">
						<if test="group.rules.size() > 0">
						${filters.groupOp}
						<foreach collection="group.rules" item="rule" index="rule_index"  open="("   separator="" close=")">
							<if test="rule_index > 0 "> ${group.groupOp} </if>
							<choose>
								<when test="rule.data.equalsIgnoreCase('isnull')">${rule.field} is null</when>	
								<when test="rule.op =='eq' ">REGEXP_LIKE(${rule.field}, '^' || #{rule.data}|| '$','i')</when>
								<when test="rule.op =='ne' ">${rule.field} <![CDATA[ != ]]> #{rule.data}</when>
								<when test="rule.op =='lt' ">${rule.field} <![CDATA[ < ]]> #{rule.data}</when>
								<when test="rule.op =='le' ">${rule.field} <![CDATA[ <= ]]> #{rule.data}</when>
								<when test="rule.op =='gt' ">${rule.field} <![CDATA[ > ]]> #{rule.data}</when>
								<when test="rule.op =='ge' ">${rule.field} <![CDATA[ >= ]]> #{rule.data}</when>
								<when test="rule.op =='bw' ">REGEXP_LIKE(${rule.field}, '^' || #{rule.data},'i')</when>
								<when test="rule.op =='bn' "> NOT REGEXP_LIKE(${rule.field}, '^' || #{rule.data},'i')</when>
								<when test="rule.op =='in' "></when>
								<when test="rule.op =='ni' "></when>
								<when test="rule.op =='ew' "> REGEXP_LIKE(${rule.field}, #{rule.data} || '$','i')</when>
								<when test="rule.op =='en' "> NOT REGEXP_LIKE(${rule.field}, #{rule.data} || '$','i')</when>
								<when test="rule.op =='cn' ">REGEXP_LIKE(${rule.field}, REGEXP_REPLACE(#{rule.data},' ','|'),'i')</when>
								<when test="rule.op =='nc' ">NOT REGEXP_LIKE(${rule.field}, REGEXP_REPLACE(#{rule.data},' ','|'),'i')</when>
								</choose> 
						</foreach>
						</if>
					</foreach>
				</if> 
					)
			</when>
		</choose>
	</sql>
	

	<sql id="totalHeader" >
		SELECT 
			ceil(count(*)/ #{rows} ) as TOTAL,
			#{page} as PAGE ,
			count(*) RECORDS 
		FROM ( SELECT rownum rn, TB.* FROM (
	</sql>

	

	<sql id="header">
		<if test="listType != null and listType=='page'">
		<include refid="PaginationMapper.pageHeader"></include>
		</if>
		
		<if test="listType != null and listType=='total'">
		<include refid="PaginationMapper.totalHeader"></include>
		</if>		
		
	</sql>
	<sql id="footer">
		<if test="listType != null and listType=='page'">
		<include refid="PaginationMapper.pageFilterJqGrid"></include>
		<include refid="PaginationMapper.pageFooterJqGrid"></include>
		</if>
		
		<if test="listType != null and listType=='total'">
		<include refid="PaginationMapper.pageFilterJqGrid"></include>
		</if>
		
	</sql>
	


</mapper>